import SSAO1Pass from "./SSAO";
import GBufferPass from "./GBufferPass";
import BlurPass from "./GaussianBlur";
import CompositePass from "./CompositePass";
import ContourPass from "./ContourPass";
import DrawBufferPass from "./DrawBufferPass";
import { WebGLRenderTarget, Group } from "three";
declare class MoleculeRenderer {
    gbufferPass: GBufferPass;
    ssao1Pass: SSAO1Pass;
    ssao2Pass: SSAO1Pass;
    blur1Pass: BlurPass;
    blur2Pass: BlurPass;
    compositePass: CompositePass;
    contourPass: ContourPass;
    drawBufferPass: DrawBufferPass;
    colorBuffer: WebGLRenderTarget;
    normalBuffer: WebGLRenderTarget;
    positionBuffer: WebGLRenderTarget;
    blurIntermediateBuffer: WebGLRenderTarget;
    ssaoBuffer: WebGLRenderTarget;
    ssaoBuffer2: WebGLRenderTarget;
    ssaoBufferBlurred: WebGLRenderTarget;
    ssaoBufferBlurred2: WebGLRenderTarget;
    constructor();
    setupGui(gui: any): void;
    setBackgroundColor(color: any): void;
    setHighlightInstance(instance: any): void;
    hitTest(renderer: any, x: any, y: any): number;
    updateMolecules(positions: any, typeids: any, instanceids: any, numAgents: any, numAtomsPerAgent: any): void;
    updateColors(numColors: any, colorsData: any): void;
    createMoleculeBuffer(n: any): void;
    setMeshGroups(agentMeshGroup: Group, agentFiberGroup: Group): void;
    resize(x: any, y: any): void;
    setShowAtoms(show: any): void;
    render(renderer: any, camera: any, target: any): void;
}
export default MoleculeRenderer;
